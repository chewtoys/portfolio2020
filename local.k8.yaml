# backend-api
apiVersion: apps/v1
kind: Deployment
metadata:
  # Unique key of the Deployment instance
  name: portfolio-back
spec:
  # 3 Pods should exist at all times.
  replicas: 1
  selector:
    matchLabels:
      app: portfolio-back
  template:
    metadata:
      labels:
        # Apply this label to pods and default
        # the Deployment label selector to this value
        app: portfolio-back
    spec:
      containers:
      - name: portfolio-back-cont
        # Run this image
        image: portfolio2020_api:latest
        # to allow local image pull
        imagePullPolicy: Never
---
# backend expose
apiVersion: v1
kind: Service
metadata:
  labels:
    app: portfolio-back
  name: portfolio-back
spec:
  # clusterIP: 10.98.168.88
  ports:
  - port: 4500
    protocol: TCP
    targetPort: 4500
  selector:
    app: portfolio-back
  type: ClusterIP
status:
  loadBalancer: {}

---
# backend-db
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: portfolio-db
  name: portfolio-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: portfolio-db
  strategy: {}
  template:
    metadata:
      labels:
        app: portfolio-db
    spec:
      containers:
      - image: postgres:13
        name: postgres
        resources: {}
status: {}
---
# backend-db expose
apiVersion: v1
kind: Service
metadata:
  labels:
    app: portfolio-db
  name: portfolio-db
  # namespace: default
  # resourceVersion: "1240224"
  # selfLink: /api/v1/namespaces/default/services/portfolio-db
  # uid: e2e9df7b-67c9-4fed-a279-6c10ba8aecd8
spec:
  # clusterIP: 10.98.168.88
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: portfolio-db
  # sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
